#!/usr/bin/env groovy

// Copyright 2019 Andrew Clemons, Wellington New Zealand
// All rights reserved.
//
// Redistribution and use of this script, with or without modification, is
// permitted provided that the following conditions are met:
//
// 1. Redistributions of this script must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
//  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
//  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
//  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
//  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

node('master') {
    stage('build') {
        checkout scm

        def userId = sh(returnStdout: true, script: '#!/bin/sh -e\nid -u jenkins').trim()
        def groupId = sh(returnStdout: true, script: '#!/bin/sh -e\nid -g jenkins').trim()

        sh("rm -rf slackware-container")
        sh("git clone --depth 1 https://github.com/vbatts/slackware-container.git")

        // run in a privileged container so we can set root perms etc
        docker.image("vbatts/slackware:current").inside("-u 0 --privileged") {
            sh("touch /var/lib/slackpkg/current")
            sh("slackpkg -default_answer=yes -batch=on update")
            sh("slackpkg -default_answer=yes -batch=on install curl cyrus-sasl cpio nghttp2 ruby")

            ansiColor('xterm') {
                try {
                    sh("bash scripts/build_current_x86_base_image.sh")
                } finally {
                    sh "#!/bin/sh -e\nchown -R ${userId}:${groupId} slackware-container"
                }
            }
        }

        ansiColor('xterm') {
            docker.build(env.DOCKER_IMAGE, "--file Dockerfile.x86-current-base --no-cache .")
        }
    }
}
