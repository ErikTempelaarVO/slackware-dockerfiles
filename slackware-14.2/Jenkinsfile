#!/usr/bin/env groovy

// Copyright 2019-2021 Andrew Clemons, Wellington New Zealand
// All rights reserved.
//
// Redistribution and use of this script, with or without modification, is
// permitted provided that the following conditions are met:
//
// 1. Redistributions of this script must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
//
//  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
//  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
//  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
//  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
//  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

node('master') {
    stage('build') {
        checkout scm

        def userId = sh(returnStdout: true, script: '#!/bin/sh -e\nid -u').trim()
        def groupId = sh(returnStdout: true, script: '#!/bin/sh -e\nid -g').trim()
        def dir = sh(returnStdout: true, script: '#!/bin/sh -e\npwd').trim()

        // add capability SYS_ADMIN so we can mount things etc etc
        docker.image("alpine:3.15").inside("-u 0 --cap-add SYS_ADMIN -e RELEASENAME=slackware -e ARCH=i586 -e VERSION=14.2 -e CHOWN_TO=${userId}:${groupId} -v ${dir}:/data") {
            ansiColor('xterm') {
                sh("sh scripts/build_base_image.sh")
            }
        }

        def args = "--file slackware-14.2/Dockerfile"

        if ("true".equals(env.NO_CACHE)) {
            args = "${args} --no-cache"
        }

        ansiColor('xterm') {
            withEnv(["DOCKER_BUILDKIT=1"]) {
                docker.build(env.DOCKER_IMAGE, "${args} .")
            }

            deleteDir()
        }
    }
}
